#!/bin/env bash

setup_prefix() {
    mkdir -p $1/bin
    mkdir -p $1/lib
    [ "${SETUP_COMPILER}" != "" ] && cp ${SETUP_COMPILER} $1/bin/
    find $1 -type d -exec fs sa {} system:anyuser rl \;
}

download_files() {
    if [ ! -f $PYTHON_VERSION.tar.bz2 ] 
    then
        wget http://www.python.org/ftp/python/${PYVER}/$PYTHON_VERSION.tar.bz2
    fi
    
    if [ ! -f ez_setup.py ] 
    then
        wget http://peak.telecommunity.com/dist/ez_setup.py
    fi
    
    if [ ! -f setuptools-0.6c11-py${PYVER_MAJOR}.egg ]
    then
        wget --no-check-certificate http://pypi.python.org/packages/${PYVER_MAJOR}/s/setuptools/setuptools-0.6c11-py${PYVER_MAJOR}.egg#md5=fe1f997bc722265116870bc7919059ea
    fi
    if [ ! -e matplotlib-${MPL_VER}.tar.gz ]
    then 
        wget http://sourceforge.net/projects/matplotlib/files/matplotlib/matplotlib-${MPL_VER}/matplotlib-${MPL_VER}.tar.gz/download?_test=goal
    fi
}


install_python() {
    if [ ! -d $PYTHON_VERSION ]
    then
        echo "Extracting tarball..."
        tar xvfj $PYTHON_VERSION.tar.bz2 > /dev/null
        echo "Done"
    fi

    # building python itself..
    cd $PYTHON_VERSION
    ./configure \
      --enable-shared \
      --with-threads \
      --with-system-expat \
      --with-system-ffi \
      --prefix=$PREFIX
    make -j3 || return $?
    make install || return $?
    
    cd ..
    
    # setting environment...
    cp -f activate_base activate
    echo -e "export PATH=$PREFIX/bin/:\$PATH\n" >> activate
    echo -e "export LD_LIBRARY_PATH=$PREFIX/lib/:\$LD_LIBRARY_PATH\n" >> activate
    [ "${SETUP_COMPILER}" != "" ] && echo -e ". ${PREFIX}/bin/${SETUP_COMPILER} ${SETUP_ARGS}" >> activate
    mv activate ${PREFIX}/bin/
}

install_tcltk() {
    start=`pwd`
    for f in tcl tk
    do
        cd $start
	fver=$f${TCLTK_VER}
        if [ ! -e "${fver}-src.tar.gz" ]
        then
            wget http://downloads.sourceforge.net/sourceforge/tcl/${fver}-src.tar.gz || return $?
        fi
        [ -d "${fver}" ] && rm -rf $fver
        tar xvfz ${fver}-src.tar.gz
        
        cd ${fver}/unix
        ./configure --prefix=${PREFIX}
        make install || return $?
        cd $start
    done
}

install_matplotlib() {
    if [ -d matplotlib-${MPL_VER} ]
    then
        rm -rf matplotlib-${MPL_VER}
    fi
    tar xvfz matplotlib-${MPL_VER}.tar.gz
    cd matplotlib-${MPL_VER}
    python setup.py install || return $?

}
install_numpy() {
    echo "Downloading numpy.."
    NUMPY_VER=1.6.2
    [ -f numpy-${NUMPY_VER}.tar.gz ] || wget "http://downloads.sourceforge.net/numpy/numpy-${NUMPY_VER}.tar.gz"
    echo "Done"
    [ -d numpy-${NUMPY_VER} ] && rm -rf numpy-${NUMPY_VER}
    tar -xzf numpy-${NUMPY_VER}.tar.gz
    cd numpy-${NUMPY_VER}
    python setup.py build # --fcompiler=gnu95
    python setup.py install
    cd ..
    echo "numpy installed"
}

easy_installs() {
    easy_install matplotlib
    easy_install scipy
    easy_install ipython
    easy_install cython
    easy_install sympy
    easy_install pyyaml
    easy_install pexpect
}

install_hdf5() {
   h5_fname=hdf5-${H5VER}-linux-x86_64-shared
   [ ! -e "${h5_fname}.tar.gz" ] && wget http://www.hdfgroup.org/ftp/HDF5/current/bin/linux-x86_64/${h5_fname}.tar.gz
   [ -d "${h5_fname}" ] && rm -rf ${h5_name}
   echo "Extracting hdf5..."
   tar xvfz ${h5_fname}.tar.gz > /dev/null
   echo "Copying files.."
   for d in bin lib include share
   do
       echo "Moving $d"
       [ ! -d ${PREFIX}/$d ] && mkdir -p ${PREFIX}/$d
       mv ${h5_fname}/$d/* ${PREFIX}/$d/
   done
}
install_h5py() {
    start=`pwd`

#   easy_install h5py
   [ ! -d h5py-${H5PY_VER}.tar.gz ] && wget http://h5py.googlecode.com/files/h5py-${H5PY_VER}.tar.gz
   echo "Extracting h5py.."
   tar xvfz h5py-${H5PY_VER}.tar.gz > /dev/null
   cd h5py-${H5PY_VER}
   python setup.py build --hdf5=$PREFIX
   python setup.py install
   cd $start
   echo "Done"
}

install_madx() {
    start=`pwd`
    [ ! -d "madX" ] && svn checkout http://svnweb.cern.ch/guest/madx/trunk/madX/
    cd madX
    svn update
    [ -d "build" ] && rm -rf build
    mkdir build;cd build
    cmake \
        -DMADX_STATIC=OFF \
        -DBUILD_SHARED_LIBS=ON \
        -DCMAKE_INSTALL_PREFIX=${PREFIX} \
        -DCMAKE_BUILD_TYPE=RelWithDebInfo \
        ../
    make install || return $?
    cd $start
}

install_pymad() {
    start=`pwd`
    install_madx || return $?
    if [ ! -d "pymad" ] 
    then
        git clone git://github.com/pymad/pymad.git || return 1
    fi
    cd pymad
    git pull
    cd src
    python setup.py install
    cd $start
}

install_placet_htgen() {
    start=`pwd`
    [ ! -d "placet" ] && svn co http://svnweb.cern.ch/guest/clicsw/trunk/placet
    cd placet
    svn update || return $?
    cd $start
    [ -d placet-build ] && rm -rf placet-build
    cp -r placet placet-build
    cd placet-build
    ./configure \
        --enable-octave \
        --enable-python \
        --with-python=python${PYVER_MAJOR} \
        --prefix=$PREFIX || return $?
    cd $start
    [ ! -d "HTGEN" ] && svn co http://svnweb.cern.ch/guest/clicsw/trunk/HTGEN/
    cd HTGEN
    svn update || return $?
    make PLACET_DIR=$start/placet-build install INSTALL_PREFIX=$PREFIX || return 1
    cd $start/placet-build
    HTGEN_DIR=${PREFIX} ./configure \
        --enable-htgen \
        --enable-octave \
        --enable-python \
        --with-pydir=${PREFIX} \
        --prefix=$PREFIX || return $?
    make install || return 1
    cd $start
}

install_fftw3() {
    start=`pwd`
    [ ! -f fftw-${FFTW_VER}.tar.gz ] && wget http://www.fftw.org/fftw-${FFTW_VER}.tar.gz
    tar xzf fftw-${FFTW_VER}.tar.gz 
    cd fftw-${FFTW_VER}/
    ./configure \
       --enable-avx \
       --enable-openmp \
       --prefix=${PREFIX}
    make -j${NPROCS}
    make install
    cd ${start}
}

install_guineapig() {
    [ ! -d guinea-pig ] && svn co http://svnweb.cern.ch/guest/clicsw/trunk/guinea-pig
    cd guinea-pig/
    svn up
    [ -d build ] && rm -rf build
    mkdir build
    cd build
    cmake ../
    FFTWDIR=${PREFIX} /usr/bin/cmake28 -DCMAKE_INSTALL_PREFIX=${PREFIX} ..
    make -j${NPROCS}
    make install
}

install_pyevolve() {
  PYEVOLVE_VER=0.6rc1
  [ ! -f Pyevolve-${PYEVOLVE_VER}.tar.gz ] && wget http://ufpr.dl.sourceforge.net/project/pyevolve/Pyevolve/${PYEVOLVE_VER}/Pyevolve-${PYEVOLVE_VER}.tar.gz
  tar -xzf Pyevolve-${PYEVOLVE_VER}.tar.gz 
  cd Pyevolve-${PYEVOLVE_VER}/
  python setup.py build
  python setup.py install
}
